@model Post

@inject UserManager<User> UserManager

@{
    var loggedInUser = await UserManager.GetUserAsync(User);
    var username = loggedInUser?.UserName;
    var fullName = loggedInUser?.FullName;
    var profilePicture = Url.Content("~/" + (string.IsNullOrEmpty(loggedInUser?.ProfilePictureUrl) ? "images/avatar/User.png" : loggedInUser.ProfilePictureUrl));
}

@{
    int loggedInUserId = int.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out int result) ? result : 0;

    TimeSpan timeSpanSincePosted = DateTime.Now.Subtract(Model.DateCreated);
    string displayTime = "";
    if (timeSpanSincePosted.TotalDays >= 1)
    {
        displayTime = $"{timeSpanSincePosted.Days}d ago";
    }
    else if (timeSpanSincePosted.TotalHours >= 1)
    {
        displayTime = $"{timeSpanSincePosted.Hours}h ago";
    }
    else if (timeSpanSincePosted.TotalMinutes >= 1)
    {
        displayTime = $"{timeSpanSincePosted.Minutes}m ago";
    }
    else
    {
        displayTime = "Just now";
    }

    bool isFavorited = Model.Favorites.Any(n => n.UserId == loggedInUserId);
    bool isLiked = Model.Like.Any(n => n.UserId == loggedInUserId);
    bool isPrivate = Model.IsPrivate == true && Model.UserId == loggedInUserId;
    bool isReported = Model.Reports.Any(n => n.UserId == loggedInUserId);

    bool showAllComments = ViewData["ShowAllComments"] as bool? ?? false;

}

<div id="post-@Model.Id" class="bg-white rounded-xl shadow-md text-sm font-medium border border-[#cabeca] mb-4 transition-all duration-300 hover:shadow-lg">
    @* Post Heading *@
    <div class="flex gap-3 sm:p-4 p-3 text-sm font-medium">
        <a asp-controller="User" asp-action="Details" asp-route-userId="@Model.UserId">
            <img src="@Url.Content("~/" + (string.IsNullOrEmpty(Model.User.ProfilePictureUrl) ? "images/avatar/User.png" : Model.User.ProfilePictureUrl))" class="w-10 h-10 rounded-full object-cover border-2 border-[#4a3256]" />
        </a>
        <div class="flex-1">
            <a asp-controller="User" asp-action="Details" asp-route-userId="@Model.UserId">
                <h4 class="font-semibold text-[#4a3256]">@Model.User.FullName</h4>
                <div class="text-xs text-[#cabeca]" title="@Model.DateCreated.ToString("MM/dd/yyyy hh:mm tt")">@displayTime</div>
            </a>
        </div>
        <div class="-mr-1">
            <button type="button" class="bg-[#eadbf0] flex items-center justify-center rounded-full hover:bg-[#d2b9e0] w-8 h-8 transition-colors">
                <ion-icon name="ellipsis-horizontal" class="text-[#4a3256] text-xl"></ion-icon>
            </button>
            <div class="p-1 w-[185px] bg-white rounded-lg shadow-lg post-options-dropdown" uk-dropdown="pos: bottom-right; animation: uk-animation-scale-up uk-transform-origin-top-right; animate-out: true; mode: click">

                @if (Model.UserId == loggedInUserId)
                {
                    <form class="rounded-lg hover:bg-[#eadbf0] transition-colors" asp-controller="Home" asp-action="TogglePostVisibility" onsubmit="closeDropdown(event)">
                        <input type="hidden" name="postId" value="@Model.Id" />
                        <button type="submit" class="toggle-visibility-btn p-2 flex gap-2 justify-start items-center w-full h-full">
                            <ion-icon name="@(isPrivate ? "lock-open-outline" : "lock-closed-outline")" class="text-xl text-[#4a3256]"></ion-icon>
                            <p class="text-[#4a3256]"> Set as @(isPrivate ? "public" : "private")</p>
                        </button>
                    </form>
                    <hr class="my-1 border-[#cabeca]" />
                    <div class="rounded-lg hover:bg-[#eadbf0] transition-colors">
                        <button type="button" onclick="openPostDeleteDialog('@Model.Id', event)" class="delete-post-btn p-2 flex gap-2 justify-start items-center w-full h-full">
                            <ion-icon name="trash-outline" class="text-xl text-[#4a3256]"></ion-icon>
                            <p class="text-[#4a3256]"> Delete post</p>
                        </button>
                    </div>
                }
                else if (!isReported)
                {
                    <form class="rounded-lg hover:bg-[#eadbf0] transition-colors" asp-controller="Home" asp-action="AddPostReport" onsubmit="closeDropdown(event)">
                        <input type="hidden" name="postId" value="@Model.Id" />
                        <button type="submit" class="report-post-btn p-2 flex gap-2 justify-start items-center w-full h-full">
                            <ion-icon name="flag-outline" class="text-xl text-[#4a3256]"></ion-icon>
                            <p class="text-[#4a3256]"> Report</p>
                        </button>
                    </form>
                }
            </div>
        </div>

    </div>
    @* Post Content *@
    <a asp-controller="Home" asp-action="PostDetails" asp-route-postId="@Model.Id">
        <div class="sm:px-4 p-2.5 pt-0 w-full">
            <p class="font-normal text-[#4a3256] leading-relaxed">
                @Model.Content
            </p>
        </div>
        

    </a>

    @* Post Image *@
    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <a asp-controller="Home" asp-action="PostDetails" asp-route-postId="@Model.Id">
            <div class="relative w-full h-full px-0 pt-2">
                <img src="@Url.Content("~/" + Model.ImageUrl)" class="w-full h-full object-cover" />
            </div>
        </a>
    }
    @* Post Interests *@
    @if (Model.Interests != null && Model.Interests.Any())
    {
        <div class="py-1 px-4 border-t border-[#cabeca]">
            <div class="flex flex-wrap gap-1 text-xs">
                @{
                    var interestsToShow = Model.Interests.OrderByDescending(i => i.Score).Take(3).ToList();
                    var totalInterests = Model.Interests.Count;
                }

                @foreach (var interest in interestsToShow)
                {
                    <span class="bg-[#eadbf0] text-[#4a3256] px-2 py-0.5 rounded-full">
                        <ion-icon name="@interest.Interest.IconName" class="text-xs"></ion-icon>
                        @interest.Interest.Name
                    </span>
                }

                @if (totalInterests > 3)
                {
                    <span class="text-[#cabeca]">+@(totalInterests - 3) more</span>
                }
            </div>
        </div>
    }

    @* Icons *@
    <div class="sm:p-4 p-3 flex items-center gap-4 text-xs font-semibold border-t border-[#cabeca]">
        <div class="flex items-center gap-2">
            <form asp-controller="Home" asp-action="TogglePostLike">
                <input type="hidden" name="postId" value="@Model.Id" />
                <button type="submit" class="like-button p-1.5 hover:bg-[#eadbf0] cursor-pointer transition-all ease-in-out duration-200 flex items-center justify-center rounded-full">
                    <ion-icon class="text-lg @(isLiked ? "text-red-500" : "text-[#4a3256]")" name="@(isLiked ? "heart" : "heart-outline")"></ion-icon>
                </button>
            </form>
            <a href="#" class="text-[#4a3256]">@Model.Like.Count</a>
        </div>

        <div class="flex items-center gap-2">
            <a class="p-1.5 hover:bg-[#eadbf0] cursor-pointer transition-all ease-in-out duration-200 flex items-center justify-center rounded-full">
                <ion-icon class="text-lg text-[#4a3256]" name="chatbubble-ellipses-outline"></ion-icon>
            </a>
            <a href="#" class="text-[#4a3256]">@Model.Comment.Count</a>
        </div>

        <div class="flex items-center gap-2 ml-auto">
            <form asp-controller="Home" asp-action="TogglePostFavorite">
                <input type="hidden" name="postId" value="@Model.Id" />
                <button type="submit" class="favorite-button p-1.5 hover:bg-[#eadbf0] cursor-pointer transition-all ease-in-out duration-200 flex items-center justify-center rounded-full">
                    <ion-icon class="text-lg @(isFavorited ? "text-[#4a3256]" : "text-[#4a3256]")" name="@(isFavorited ? "bookmark" : "bookmark-outline")"></ion-icon>
                </button>
            </form>
            @if (Model.Favorites.Count > 0)
            {
                <a href="#" class="text-[#4a3256]">@Model.Favorites.Count</a>
            }
        </div>
    </div>

    @*comment section*@
    @if (Model.Comment.Any())
    {
        <div class="p-3 border-t border-[#cabeca] font-normal space-y-3 relative bg-[#f9f5fc]">
            @foreach (var comment in showAllComments ?
           Model.Comment.OrderByDescending(n => n.DateCreated)
           : Model.Comment.OrderByDescending(n => n.DateCreated).Take(2))
            {
                TimeSpan commentTimeSpanSincePosted = DateTime.Now.Subtract(comment.DateCreated);
                string commentDisplayTime = commentTimeSpanSincePosted switch
                {
                    var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
                    var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
                    var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
                    _ => "Just Now"
                };

                <div class="flex items-start gap-3 relative">
                    <a asp-controller="User" asp-action="Details" asp-route-userId="@comment.UserId">
                        <img src="@Url.Content("~/" + (string.IsNullOrEmpty(comment.User.ProfilePictureUrl) ? "images/avatar/User.png" : comment.User.ProfilePictureUrl))" class="w-8 h-8 rounded-full mr-2 border border-[#cabeca]" />
                    </a>
                    <div class="flex-1 bg-white rounded-lg p-2">
                        <div class="flex justify-content-between">
                            <a asp-controller="User" asp-action="Details" asp-route-userId="@comment.UserId" class="text-[#4a3256] font-medium inline-block flex-grow">
                                @comment.User.FullName
                            </a>
                            <small class="text-[#cabeca]">@commentDisplayTime</small>
                        </div>
                        <div class="flex items-center justify-between">
                            <p class="mt-0.5 text-[#4a3256]">
                                @comment.Content
                            </p>
                            @if (comment.UserId == loggedInUserId)
                            {
                                <button type="button" onclick="openCommentDeleteDialog('@comment.Id', event)" class="delete-comment-btn text-[#cabeca] hover:text-[#4a3256] transition-colors p-1">
                                    <ion-icon name="trash-outline" class="text-sm"></ion-icon>
                                </button>
                            }

                        </div>
                    </div>
                </div>
            }
            @if (Model.Comment.Count >= 3 && !showAllComments)
            {
                <div class="p-1.5 text-center">
                    <a asp-controller="Home" asp-action="PostDetails" asp-route-postId="@Model.Id" class="text-[#4a3256] hover:underline font-medium">
                        Show all comments
                    </a>
                </div>
            }
        </div>
    }

    <div class="sm:p-4 p-3 flex items-center border-t border-[#cabeca] gap-2">
        <form asp-controller="Home" asp-action="AddPostComment" class="comment-form w-full flex items-center gap-2">
            <a asp-controller="User" asp-action="Details" asp-route-userId="@loggedInUser.Id">
                <img src="@profilePicture" class="w-8 h-8 rounded-full mr-2 border border-[#cabeca]" />
            </a>

            <input type="hidden" name="postId" value="@Model.Id" />
            <div class="flex-1 relative overflow-hidden rounded-full bg-[#eadbf0]">
                <textarea name="content" placeholder="Add comment..." rows="1"
                          class="w-full resize-none border-0 rounded-full bg-[#eadbf0] px-4 py-2 text-[#4a3256] focus:ring-1 focus:ring-[#4a3256] placeholder-[#cabeca]"></textarea>
            </div>
            <button type="submit" class="text-sm rounded-full py-2 px-4 bg-[#4a3256] hover:bg-opacity-90 transition-all ease-in-out duration-200 text-white">Comment</button>
        </form>
    </div>
</div>
